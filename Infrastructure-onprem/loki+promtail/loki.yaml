# ServiceAccount for Loki
apiVersion: v1
kind: ServiceAccount
metadata:
 name: loki
 namespace: istio-system
 labels:
   helm.sh/chart: loki-6.18.0
   app.kubernetes.io/name: loki
   app.kubernetes.io/instance: loki
   app.kubernetes.io/version: "3.2.0"
   app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true

---
# ConfigMap containing Loki configuration
apiVersion: v1
kind: ConfigMap
metadata:
 name: loki
 namespace: istio-system
 labels:
   helm.sh/chart: loki-6.18.0
   app.kubernetes.io/name: loki
   app.kubernetes.io/instance: loki
   app.kubernetes.io/version: "3.2.0"
   app.kubernetes.io/managed-by: Helm
data:
 # Main Loki configuration 
 config.yaml: |
   # Authentication disabled
   auth_enabled: false

   # Common configuration settings
   common:
     compactor_address: 'http://loki:3100'
     path_prefix: /var/loki
     replication_factor: 1
     storage:
       filesystem:
         chunks_directory: /var/loki/chunks
         rules_directory: /var/loki/rules

   # Limits configuration    
   limits_config:
     max_cache_freshness_per_query: 10m
     query_timeout: 300s
     reject_old_samples: true
     reject_old_samples_max_age: 168h
     retention_period: 168h
     split_queries_by_interval: 15m
     volume_enabled: true

   # Schema configuration
   schema_config:
     configs:
     - from: "2024-04-01"
       index:
         period: 24h
         prefix: index_
       object_store: 'filesystem'
       schema: v13
       store: tsdb

   # Server configuration        
   server:
     grpc_listen_port: 9095
     http_listen_port: 3100
     http_server_read_timeout: 600s
     http_server_write_timeout: 600s

---
# Runtime ConfigMap for Loki
apiVersion: v1
kind: ConfigMap
metadata:
 name: loki-runtime
 namespace: istio-system
 labels:
   helm.sh/chart: loki-6.18.0
   app.kubernetes.io/name: loki
   app.kubernetes.io/instance: loki
   app.kubernetes.io/version: "3.2.0"
   app.kubernetes.io/managed-by: Helm
data:
 runtime-config.yaml: |
   {}

---
# ClusterRole defining Loki permissions
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
 name: loki-clusterrole
 labels:
   helm.sh/chart: loki-6.18.0
   app.kubernetes.io/name: loki
   app.kubernetes.io/instance: loki
   app.kubernetes.io/version: "3.2.0"
   app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: [""]
 resources: ["configmaps", "secrets"]
 verbs: ["get", "watch", "list"]

---
# ClusterRoleBinding for Loki
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
 name: loki-clusterrolebinding
 labels:
   helm.sh/chart: loki-6.18.0
   app.kubernetes.io/name: loki
   app.kubernetes.io/instance: loki
   app.kubernetes.io/version: "3.2.0"
   app.kubernetes.io/managed-by: Helm
subjects:
 - kind: ServiceAccount
   name: loki
   namespace: istio-system
roleRef:
 kind: ClusterRole
 name: loki-clusterrole
 apiGroup: rbac.authorization.k8s.io

---
# Memberlist Service for Loki cluster communication
apiVersion: v1
kind: Service
metadata:
 name: loki-memberlist
 namespace: istio-system
 labels:
   helm.sh/chart: loki-6.18.0
   app.kubernetes.io/name: loki
   app.kubernetes.io/instance: loki
   app.kubernetes.io/version: "3.2.0"
   app.kubernetes.io/managed-by: Helm
spec:
 type: ClusterIP
 clusterIP: None
 ports:
   - name: tcp
     port: 7946
     targetPort: http-memberlist
     protocol: TCP
 selector:
   app.kubernetes.io/name: loki
   app.kubernetes.io/instance: loki
   app.kubernetes.io/part-of: memberlist

---
# Headless Service for Loki
apiVersion: v1
kind: Service
metadata:
 name: loki-headless
 namespace: istio-system
 labels:
   helm.sh/chart: loki-6.18.0
   app.kubernetes.io/name: loki
   app.kubernetes.io/instance: loki
   app.kubernetes.io/version: "3.2.0"
   app.kubernetes.io/managed-by: Helm
   variant: headless
   prometheus.io/service-monitor: "false"
spec:
 clusterIP: None
 ports:
   - name: http-metrics
     port: 3100
     targetPort: http-metrics
     protocol: TCP
 selector:
   app.kubernetes.io/name: loki
   app.kubernetes.io/instance: loki

---
# Main Loki Service
apiVersion: v1
kind: Service
metadata:
 name: loki
 namespace: istio-system
 labels:
   helm.sh/chart: loki-6.18.0
   app.kubernetes.io/name: loki
   app.kubernetes.io/instance: loki
   app.kubernetes.io/version: "3.2.0"
   app.kubernetes.io/managed-by: Helm
spec:
 type: ClusterIP
 ports:
   - name: http-metrics
     port: 3100
     targetPort: http-metrics
     protocol: TCP
   - name: grpc
     port: 9095
     targetPort: grpc
     protocol: TCP
 selector:
   app.kubernetes.io/name: loki
   app.kubernetes.io/instance: loki
   app.kubernetes.io/component: single-binary

---
# StatefulSet for Loki
apiVersion: apps/v1
kind: StatefulSet
metadata:
 name: loki
 namespace: istio-system
 labels:
   helm.sh/chart: loki-6.18.0
   app.kubernetes.io/name: loki
   app.kubernetes.io/instance: loki
   app.kubernetes.io/version: "3.2.0"
   app.kubernetes.io/managed-by: Helm
   app.kubernetes.io/component: single-binary
   app.kubernetes.io/part-of: memberlist
spec:
 # Single replica configuration
 replicas: 1
 podManagementPolicy: Parallel
 serviceName: loki-headless
 
 # Pod selector
 selector:
   matchLabels:
     app.kubernetes.io/name: loki
     app.kubernetes.io/instance: loki
     app.kubernetes.io/component: single-binary
 
 template:
   metadata:
     annotations:
       checksum/config: 33763d92c95bb565c019078f0419bddedd9febff7743044c8a329dfe84d4d218
     labels:
       app.kubernetes.io/name: loki
       app.kubernetes.io/instance: loki
       app.kubernetes.io/component: single-binary
       app.kubernetes.io/part-of: memberlist
   spec:
     serviceAccountName: loki
     securityContext:
       fsGroup: 10001
       runAsGroup: 10001
       runAsNonRoot: true
       runAsUser: 10001
     
     # Container definitions
     containers:
       # Sidecar container for rules
       - name: loki-sc-rules
         image: "kiwigrid/k8s-sidecar:1.27.5"
         imagePullPolicy: IfNotPresent
         env:
           - name: METHOD
             value: WATCH
           - name: LABEL
             value: "loki_rule"
           - name: FOLDER
             value: "/rules"
           - name: RESOURCE
             value: "both"
         volumeMounts:
           - name: sc-rules-volume
             mountPath: "/rules"
       
       # Main Loki container
       - name: loki
         image: docker.io/grafana/loki:3.2.0
         imagePullPolicy: IfNotPresent
         args:
           - -config.file=/etc/loki/config/config.yaml
           - -target=all
         ports:
           - name: http-metrics
             containerPort: 3100
           - name: grpc
             containerPort: 9095
           - name: http-memberlist
             containerPort: 7946
         securityContext:
           allowPrivilegeEscalation: false
           capabilities:
             drop:
             - ALL
           readOnlyRootFilesystem: true
         readinessProbe:
           httpGet:
             path: /ready
             port: http-metrics
         volumeMounts:
           - name: tmp
             mountPath: /tmp
           - name: config
             mountPath: /etc/loki/config
           - name: storage
             mountPath: /var/loki
           - name: sc-rules-volume
             mountPath: "/rules"

     # Volume definitions
     volumes:
       - name: tmp
         emptyDir: {}
       - name: config
         configMap:
           name: loki
       - name: sc-rules-volume
         emptyDir: {}
 
 # Persistent volume claim template
 volumeClaimTemplates:
   - apiVersion: v1
     kind: PersistentVolumeClaim
     metadata:
       name: storage
     spec:
       storageClassName: nfs
       accessModes:
         - ReadWriteOnce
       resources:
         requests:
           storage: "10Gi"
