name: Shipping Service CI 

permissions:
  contents: write

on:
  workflow_dispatch:
  push:
    paths:
      - 'shipping/**'
      - '.github/workflows/shipping-ci.yml'
    branches: [ "main", "master" ]

env:
  PRODUCTION_MODE: false

jobs:
  cancel-redundant:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

  build-and-test:
    needs: cancel-redundant
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven

      - name: Dependency Resolution
        continue-on-error: ${{ env.PRODUCTION_MODE != 'true' }}
        run: |
          cd /home/runner/work/robot-shop/robot-shop/shipping
          mvn dependency:go-offline

      - name: Build with Maven
        continue-on-error: ${{ env.PRODUCTION_MODE != 'true' }}
        run: |
          cd /home/runner/work/robot-shop/robot-shop/shipping
          mvn package -DskipTests

      - name: Run Tests (if available)
        if: success()
        continue-on-error: ${{ env.PRODUCTION_MODE != 'true' }}
        run: |
          cd /home/runner/work/robot-shop/robot-shop/shipping
          if [ -d "src/test" ]; then
            mvn test
          else
            echo "No test directory found"
          fi

      - name: SonarCloud Scan
        continue-on-error: ${{ env.PRODUCTION_MODE != 'true' }}
        uses: SonarSource/sonarcloud-github-action@v2.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=robot-shop
            -Dsonar.organization=robot-shop
            -Dsonar.sources=shipping
            -Dsonar.java.binaries=shipping/target/classes
            -Dsonar.java.version=8
            -Dsonar.c.file.suffixes=-
            -Dsonar.cpp.file.suffixes=-
            -Dsonar.objc.file.suffixes=-

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        continue-on-error: ${{ env.PRODUCTION_MODE != 'true' }}
        uses: docker/build-push-action@v5
        with:
          context: ./shipping
          push: true
          tags: andherson1039/rs-shipping:${{ github.sha }}
          build-args: |
            INSTANA_AUTO_PROFILE=true
            INSTANA_SERVICE_NAME=shipping
            CART_ENDPOINT=cart:8080
            DB_HOST=mysql

      - name: Update Deployment File
        continue-on-error: ${{ env.PRODUCTION_MODE != 'true' }}
        run: |
          sed -i 's|image: andherson1039/rs-shipping:.*|image: andherson1039/rs-shipping|g' Infrastructure-onprem/K8s/manifiestos/shipping-deployment.yaml
          sed -i "s|image: andherson1039/rs-shipping|image: andherson1039/rs-shipping:${{ github.sha }}|g" Infrastructure-onprem/K8s/manifiestos/shipping-deployment.yaml
          echo "Updated deployment file:"
          cat Infrastructure-onprem/K8s/manifiestos/shipping-deployment.yaml

      - name: Commit and Push Changes
        continue-on-error: ${{ env.PRODUCTION_MODE != 'true' }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add Infrastructure-onprem/K8s/manifiestos/shipping-deployment.yaml
          git commit -m "Update shipping image to ${{ github.sha }}"
          git push
